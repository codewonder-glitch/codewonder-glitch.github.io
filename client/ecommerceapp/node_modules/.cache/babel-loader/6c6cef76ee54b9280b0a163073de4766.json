{"ast":null,"code":"var _jsxFileName = \"/Users/student_m13/Desktop/Github/codewonder-glitch.github.io/ecommerceapp/src/components/Cart.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport './styles/shop.scss';\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.getApi();\n    };\n\n    this.getApi = async () => {\n      var htmlArr = [];\n      await fetch('/products/v1/products', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n        htmlArr = data.map((dt, i) => {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"imageContainer\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 5\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: dt.productUrl,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 9\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 9\n            }\n          }, dt.productBrand), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 9\n            }\n          }, dt.productId), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 9\n            }\n          }, dt.productName), /*#__PURE__*/React.createElement(\"input\", {\n            type: \"text\",\n            onChange: this.qtyChange,\n            value: dt.productCount,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 9\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 9\n            }\n          }, dt.productCount), /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 9\n            }\n          }, dt.productPrice), /*#__PURE__*/React.createElement(\"button\", {\n            className: \"btn\",\n            type: \"submit\",\n            value: dt.productId,\n            onClick: this.orderDelete,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 9\n            }\n          }, \" Delete\"));\n        });\n        this.setState({\n          htmlArray: htmlArr\n        });\n      }).catch(err => console.log('error'));\n    };\n\n    this.orderDelete = e => {\n      e.preventDefault();\n      alert(\"Gif Deleted\");\n      console.log(e.target.value);\n      console.log(e.target.className);\n      fetch(`/products/v1/products/` + e.target.value, {\n        method: 'DELETE',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }); //       .then( => {\n      //    // let updatedEmployees = [...this.state.employees].filter(i => i.id !== id);\n      //        // this.setState({employees: updatedEmployees});\n      //       });\n\n      this.getApi();\n    };\n\n    this.updateDb = async () => {\n      document.getElementById(this.state.urlChange).src = this.state.filePath; // await fetch(`${'https://cors-anywhere.herokuapp.com/'}https://glacial-woodland-21756.herokuapp.com/giphy/v1/gifs/`+this.state.urlChange, {\n\n      await fetch('/products/v1/products' + 1, {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          gifUrl: this.state.filePath\n        })\n      }).then(response => response.json()).then(data => {});\n    };\n\n    this.gifUpdate = e => {\n      e.preventDefault(); // this.setState({urlChange:e.target.value})\n    };\n\n    this.qtyChange = e => {\n      e.preventDefault();\n    };\n\n    this.state = {\n      htmlArray: [],\n      searchKey: '',\n      srch: '',\n      count: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 4\n      }\n    }, this.state.htmlArray, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 8\n      }\n    }, \"search \")));\n  }\n\n}","map":{"version":3,"sources":["/Users/student_m13/Desktop/Github/codewonder-glitch.github.io/ecommerceapp/src/components/Cart.js"],"names":["React","Component","axios","BrowserRouter","Router","Route","Link","Switch","Search","constructor","props","componentDidMount","getApi","htmlArr","fetch","method","headers","then","response","json","data","console","log","map","dt","i","productUrl","productBrand","productId","productName","qtyChange","productCount","productPrice","orderDelete","setState","htmlArray","catch","err","e","preventDefault","alert","target","value","className","updateDb","document","getElementById","state","urlChange","src","filePath","body","JSON","stringify","gifUrl","gifUpdate","searchKey","srch","count","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {  BrowserRouter as Router, Route, Link ,Switch} from \"react-router-dom\";\n\n\nimport './styles/shop.scss'\n\nexport default class Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            htmlArray:[],\n        searchKey:'',\n        srch:'',\n        count:''\n        }\n    }\n   \n\n    componentDidMount=()=> {\nthis.getApi()\n    }\n        getApi=async()=> {\n            var htmlArr=[]\n            await fetch('/products/v1/products', {\n                method:'GET',\n               headers: {\n                 'Accept': 'application/json',\n                 'Content-Type': 'application/json'\n               }\n               }).then(response=> response.json()) .then(data=>{\n               \n                console.log(data)\n                htmlArr= data.map((dt,i)=>{\n    return(\n    <div className=\"imageContainer\">\n        <img src={dt.productUrl}/>\n        <p>{dt.productBrand}</p>\n        <p>{dt.productId}</p>\n        <p>{dt.productName}</p>\n        <input type=\"text\" onChange={this.qtyChange} value={dt.productCount}/>\n        <p>{dt.productCount}</p>\n        <p>{dt.productPrice}</p>\n        <button className=\"btn\" type=\"submit\" value={dt.productId} onClick={this.orderDelete}> Delete</button>\n        {/* <button value={dt.productID} onClick={this.gifUpdate}> Update</button> */}\n        </div>\n    )\n                    \n      }  )    \n      this.setState({htmlArray:htmlArr})\n     } ).catch((err) => \n                console.log ('error')\n                )\n        }\n    \n        orderDelete=(e)=>{\n            e.preventDefault()\n            alert(\"Gif Deleted\")\n            console.log(e.target.value)\n            console.log(e.target.className)\n            fetch(`/products/v1/products/`+e.target.value, {\n                method: 'DELETE',\n                headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json'\n                }\n              })\n        //       .then( => {\n        //    // let updatedEmployees = [...this.state.employees].filter(i => i.id !== id);\n        //        // this.setState({employees: updatedEmployees});\n        //       });\n              this.getApi()\n    \n        }\n\n        updateDb=async()=>{\n            document.getElementById(this.state.urlChange).src=this.state.filePath\n            // await fetch(`${'https://cors-anywhere.herokuapp.com/'}https://glacial-woodland-21756.herokuapp.com/giphy/v1/gifs/`+this.state.urlChange, {\n                await fetch('/products/v1/products'+1,  {\n            method: 'PUT',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body:JSON.stringify({gifUrl:this.state.filePath})      }  )\n              .then(response => response.json())\n              .then((data)=>{\n      \n          \n             \n              })}\n        gifUpdate=(e)=>{\n            e.preventDefault()\n            \n            // this.setState({urlChange:e.target.value})\n        }\n\n        qtyChange=(e)=>{\ne.preventDefault()\n\n        }\n    render(){\n\n        return(\n         \n\n<React.Fragment>\n   <div>\n       {this.state.htmlArray}\n       <h1>search </h1>\n   </div>\n   \n           \n   \n     </React.Fragment> \n           \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}